<h1>about </h1>
<p><iframe height="500" src="https://dartpad.dev/embed-inline.html?id=e936951b9e0613d198b66d1544dd8e1a" width="543"></iframe></p>
<h2>亂數分組程式</h2>
<p>gist:<a href="https://gist.github.com/40823131/e936951b9e0613d198b66d1544dd8e1a">https://gist.github.com/40823131/e936951b9e0613d198b66d1544dd8e1a</a></p>
<p><a href="https://mde.tw/dartpad/?id=e936951b9e0613d198b66d1544dd8e1a">https://mde.tw/dartpad/?id=e936951b9e0613d198b66d1544dd8e1a</a> </p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">import 'dart:html';

void main() {
  // 每一組 10 人
  int num = 10;
  // 組序由 1 開始
  int gth = 1;
  // 迴圈序號變數
  int i;
  // 每組學員暫存數列
  var gp_list = [];
  // 全班分組數列
  var cp2019 = [];

  HttpRequest.getString(
          'https://mde.tw/cp2019/downloads/2019fall_cp_1a_list.txt')
      .then((String resp) {
    // 利用 trim() 去除字串最後的跳行符號, 之後再利用 split() 根據 \n 轉為數列
    var stud_list = resp.trim().split("\n");
    // 數列利用 shuffle() 方法以隨機方法弄亂順序
    stud_list.shuffle();
    // 逐一讀取已經弄亂的學生學號數列, 利用模數運算每幾人分成一組
    for (i = 0; i &lt; stud_list.length; i++) {
      // 0, 1~(num-1), num
      if (i % num == 0) {
        gp_list = [];
        // 列印區隔符號
        print('=' * 20);
        print("group $gth :");
        print(stud_list[i]);
        // 在各分組數列中加入將對應的學員學號
        gp_list.add(stud_list[i]);
        gth = gth + 1;
      } else {
        print(stud_list[i]);
        // 在各分組數列中加入將對應的學員學號
        gp_list.add(stud_list[i]);
      }
      if (i % num == 0) {
        // 逐步將各組暫存的分組數列加入全班分組數列中
        cp2019.add(gp_list);
      }
    }
    // 列出全班分組數列
    print(cp2019);
  });
}
</pre>
<p></p>
<h1>image</h1>
<p><img alt="" height="219" src="/images/main111.jpg" width="543"/></p>